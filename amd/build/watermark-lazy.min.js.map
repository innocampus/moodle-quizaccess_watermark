{"version":3,"sources":["../src/watermark-lazy.js"],"names":["generateBitsOfHash","userUnicodeTagChars","userZeroWidthChars","init","teacher","hash","backgroundColor","startColor","bitColor","String","fromCodePoint","getUnicodeWatermarkChars","each","idx","el","WatermarkInputField","attr","type","name","value","appendTo","addBackgroundWatermark","getStrWithHiddenChars","str","NEXT_TAG","NEXT_OTHER","nextCharExpected","out","iterator","Symbol","curChar","next","beforeChar","done","isZeroWidthChar","isUnicodeTagChar","codePointAt","length","ch","txt","maxLength","baseCodePointInt","bits","i","hex","parseInt","charAt","field","dirty","addWatermark","on","keydown","evt","key","preventDefault","moveSelection","shiftKey","deleteChar","blur","select","selectionStart","selectionEnd","direction","shift","start","end","seekStart","nextPos","getPosNextVisibleChar","setSelectionRange","add","char","Math","max","code","pix","svg","y","x","rule","btoa"],"mappings":"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","sourcesContent":["/**\n * Quiz watermark JS code.\n *\n * @package quizaccess_watermark\n * @copyright 2021 Martin Gauk, TU Berlin <gauk@math.tu-berlin.de>\n */\n\nimport $ from 'jquery';\n\nlet userUnicodeTagChars = \"\";\nlet userZeroWidthChars = \"\";\n\nexport const init = (teacher, hash, backgroundColor, startColor, bitColor) => {\n    if (teacher) {\n        userUnicodeTagChars += String.fromCodePoint(0xE007A);\n        userZeroWidthChars += String.fromCodePoint(0x2064);\n    }\n    userUnicodeTagChars += getUnicodeWatermarkChars(hash, 16, 0xE0061, 4);\n    userZeroWidthChars += getUnicodeWatermarkChars(hash, 8, 0x2060, 2);\n\n    $(\".que.shortanswer .answer input, \" +\n        \".que.calculated .answer input, \" +\n        \".que.calculatedsimple .answer input, \" +\n        \".que.numerical .answer input, \" +\n        \".que.multianswer .subquestion input\").each(function(idx, el) {\n        new WatermarkInputField(el);\n    });\n\n    // Needed for preview attempts.\n    $('<input>').attr({\n        type: 'hidden',\n        name: 'quizaccess_watermark_enable_clean',\n        value: '1'\n    }).appendTo('#responseform');\n\n    addBackgroundWatermark(hash, backgroundColor, startColor, bitColor);\n};\n\n/**\n * This generates a string that starts with zero width chars and ends with the unicode tag chars.\n * Before every space it inserts the zero width chars and after the space it inserts the unicode tag chars.\n *\n * @param str\n * @returns {string}\n */\nconst getStrWithHiddenChars = function(str) {\n    const NEXT_ZW = 0; // zero width char\n    const NEXT_TAG = 1; // Unicode tag\n    const NEXT_OTHER = 2;\n\n    let nextCharExpected = NEXT_ZW;\n    let out = \"\";\n\n    const iterator = str[Symbol.iterator]();\n    let curChar = iterator.next();\n    let beforeChar = \"\";\n    while (!curChar.done) {\n        if (nextCharExpected === NEXT_ZW) {\n            if (!isZeroWidthChar(curChar.value)) {\n                out += userZeroWidthChars;\n            }\n            nextCharExpected = NEXT_OTHER;\n        } else if (nextCharExpected === NEXT_TAG) {\n            if (!isUnicodeTagChar(curChar.value)) {\n                out += userUnicodeTagChars;\n            }\n            nextCharExpected = NEXT_OTHER;\n        } else {\n            if (curChar.value === \" \") {\n                if (!isZeroWidthChar(beforeChar)) {\n                    out += userZeroWidthChars;\n                }\n                nextCharExpected = NEXT_TAG;\n            }\n            out += curChar.value;\n            beforeChar = curChar.value;\n            curChar = iterator.next();\n        }\n\n    }\n\n    // Ensure that string ends with tag.\n    // -2 because we want the code point, not the code unit.\n    if (!isUnicodeTagChar(out.codePointAt(out.length - 2))) {\n        out += userUnicodeTagChars;\n    }\n\n    return out;\n};\n\nconst isUnicodeTagChar = function(ch) {\n    if (typeof ch === 'string' || ch instanceof String) {\n        ch = ch.codePointAt(0);\n    }\n    return 0xE0000 <= ch && ch <= 0xE007F;\n};\n\nconst isZeroWidthChar = function(ch) {\n    if (typeof ch === 'string' || ch instanceof String) {\n        ch = ch.codePointAt(0);\n    }\n    return 0x2060 <= ch && ch <= 0x2064;\n};\n\nconst getUnicodeWatermarkChars = function(txt, maxLength, baseCodePointInt, bits) {\n    let out = \"\";\n    for (let i = 0; i < maxLength; i++) {\n        const hex = parseInt(txt.charAt(i), 16);\n        if (bits === 4) {\n            out += String.fromCodePoint(baseCodePointInt + hex);\n        } else if (bits === 2) {\n            out += String.fromCodePoint(baseCodePointInt + ((hex >> 2) & 3));\n            out += String.fromCodePoint(baseCodePointInt + (hex & 3));\n        }\n    }\n    return out;\n};\n\nclass WatermarkInputField {\n    constructor(field) {\n        this.field = field;\n        this.dirty = true;\n        this.addWatermark();\n\n        $(field).on(\"input\", (evt) => {\n            this.dirty = true;\n        });\n        $(field).keydown((evt) => {\n            if (evt.key === \"ArrowLeft\") {\n                evt.preventDefault();\n                this.moveSelection(\"l\", evt.shiftKey);\n            } else if (evt.key === \"ArrowRight\") {\n                evt.preventDefault();\n                this.moveSelection(\"r\", evt.shiftKey);\n            } else if (evt.key === \"Backspace\") {\n                this.deleteChar(\"l\");\n            } else if (evt.key === \"Delete\") {\n                this.deleteChar(\"r\");\n            }\n        });\n        $(field).blur((evt) => {\n            this.addWatermark();\n        });\n        $(field).select((evt) => {\n            // Only modify text when multiple chars are selected.\n            if (this.field.selectionStart !== this.field.selectionEnd) {\n                this.addWatermark();\n            }\n        });\n    }\n\n    addWatermark() {\n        if (this.dirty) {\n            this.field.value = getStrWithHiddenChars(this.field.value);\n            this.dirty = false;\n        }\n    }\n\n    moveSelection(direction, shift) {\n        const value = this.field.value;\n        const start = this.field.selectionStart;\n        const end = this.field.selectionEnd;\n        const seekStart = (direction === \"l\") ? start : end;\n        const nextPos = this.getPosNextVisibleChar(value, seekStart, direction);\n        if (shift && direction === \"l\") {\n            this.field.setSelectionRange(nextPos, end);\n        } else if (shift && direction === \"r\") {\n            this.field.setSelectionRange(start, nextPos);\n        } else {\n            this.field.setSelectionRange(nextPos, nextPos);\n        }\n    }\n\n    deleteChar(direction) {\n        if (this.field.selectionStart === this.field.selectionEnd) {\n            // select the characters that will be deleted by the key press\n            this.moveSelection(direction, true);\n        }\n    }\n\n    getPosNextVisibleChar(str, idx, direction) {\n        const add = (direction === \"r\") ? 1 : -1;\n        idx += add;\n        for (; idx < str.length && idx > 0; idx += add) {\n            const char = str.codePointAt(idx);\n            // skip low surrogates\n            if ((char & 0xFC00) === 0xDC00) {\n                continue;\n            }\n            if (isUnicodeTagChar(char) || isZeroWidthChar(char)) {\n                continue;\n            }\n            return idx;\n        }\n        return Math.max(0, idx);\n    }\n}\n\nfunction* generateBitsOfHash(code) {\n    for (let i = 0; i < code.length; i++) {\n        let char = parseInt(code[i], 16);\n        yield (char >> 3) & 1;\n        yield (char >> 2) & 1;\n        yield (char >> 1) & 1;\n        yield char & 1;\n    }\n    while (true) {\n        yield 0;\n    }\n}\n\nfunction addBackgroundWatermark(hash, backgroundColor, startColor, bitColor) {\n    let pix = generateBitsOfHash(hash);\n    let svg = `<svg version=\"1.1\" viewBox=\"0 0 90 90\" xmlns=\"http://www.w3.org/2000/svg\">\n<rect x=\"0\" y=\"0\" width=\"90\" height=\"90\" fill=\"${backgroundColor}\"/>\n<rect x=\"1\" y=\"10\" width=\"1\" height=\"1\" fill=\"${startColor}\"/>`;\n\n    for (let y=10; y<90; y+=10) {\n        for (let x=10; x<90; x+=10) {\n            if (pix.next().value > 0) {\n                svg += `<rect x=\"${x}\" y=\"${y}\" width=\"1\" height=\"1\" fill=\"${bitColor}\"/>`;\n            }\n        }\n    }\n    svg += '</svg>';\n\n    const rule = `<style>.que .formulation {\n        background-repeat: repeat;\n        background-size: 90px 90px;\n        background-image: url(data:image/svg+xml;base64,${btoa(svg)});\n    }</style>`;\n    $(rule).appendTo(\"head\");\n}\n"],"file":"watermark-lazy.min.js"}